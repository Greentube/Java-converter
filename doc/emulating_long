Emulating 'long' values in javascript
-------------------------------------

Javascript has only a single numerical data type: Number. 
This can basically just hold a double precision floating point value (with optimizations done
by the javascript engine to allow faster operation in case of integral values).
 
For values that are still in the range of an 'int' (-2^31 to 2^31-1) a normal Number is
used. For values outside this range, a specific emulation object is created:
Emulation of big 64 bit values is done with an immutable object that stores the 
two 32-bit halves of the value as individual numbers, each in the range of  0 to 2^32-1.
Here only positive numbers are used to represent the internal bit pattern, but if the
highest bit of the high value is '1', the whole long is considered to be negative 
according to the twos-complement semantics.

Having this two possibilities can keep garbage down in case the long values stay small,
and it is never necessary to do any conversion when casting a small integral value
to a long (those Numbers are valid longs also).
